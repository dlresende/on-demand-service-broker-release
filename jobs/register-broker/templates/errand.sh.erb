#!/usr/bin/env bash

set -e

# Copyright (C) 2016-Present Pivotal Software, Inc. All rights reserved.
# This program and the accompanying materials are made available under the terms of the under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

LOG_DIR=/var/vcap/sys/log/register-broker
mkdir -p $LOG_DIR

STDOUT_LOG=$LOG_DIR/errand.stdout.log
STDERR_LOG=$LOG_DIR/errand.stderr.log

touch $STDOUT_LOG
touch $STDERR_LOG
exec 1> >(tee $STDOUT_LOG)
exec 2> >(tee $STDERR_LOG >&2)

utils_path=/var/vcap/packages/broker_utils
source ${utils_path}/cf_commands.sh

<%
def escape_shell(str)
  "'#{str.to_s.gsub(/'/, "'\\\\''")}'"
end
%>

export PATH=/var/vcap/packages/cf-cli/bin:$PATH
export CF_DIAL_TIMEOUT=60

<% if_link("broker") do |broker| %>
  <% broker.if_p('cf.root_ca_cert') do |root_ca| %>
    cert_file="$(mktemp)"
    echo -e "<%= root_ca %>" > "$cert_file"
    export SSL_CERT_FILE="$cert_file"
    trap "rm -f $cert_file" EXIT
  <% end %>
<% end %>

cf_retry api <%= '--skip-ssl-validation ' if p('disable_ssl_cert_verification') %><%= p('cf.api_url') %>
cf_retry auth <%= escape_shell(p('cf.admin_username')) %> <%= escape_shell(p('cf.admin_password')) %>

broker_name=<%= p('broker_name') %>
broker_cmd=$(cf_service_broker_command "${broker_name}")

<% if_p('broker_uri') do |broker_uri| %>
broker_uri=<%= broker_uri %>
<% end %>

if [ -z "$broker_uri" ]; then
  # We assume that if no route is registered, there is only 1 broker instance
  broker_uri=http://<%= link('broker').instances[0].address %>:<%= link('broker').p('port') %>
fi

cf $broker_cmd $broker_name <%= escape_shell(link('broker').p('username')) %> <%= escape_shell(link('broker').p('password')) %> $broker_uri

<% if p('enable_service_access') %>
  <% link('broker')
    .p('service_catalog.plans')
    .reject { |plan| plan.nil?}
    .each do |plan| %>
    # fetch the cf_service_access property. set it to enable by default
      <% if plan.fetch('cf_service_access', 'enable') == 'enable' %>
        cf enable-service-access <%= link('broker').p('service_catalog.service_name') %> -p <%= plan.fetch('name') %>
      <% elsif plan.fetch('cf_service_access') == 'disable' %>
        cf disable-service-access <%= link('broker').p('service_catalog.service_name')%> -p <%= plan.fetch('name') %>
      <% elsif plan.fetch('cf_service_access') == 'org-restricted' %>
        cf enable-service-access <%= link('broker').p('service_catalog.service_name')%> -o <%= escape_shell(p('default_access_org')) %> -p <%= plan.fetch('name') %>
      <% elsif plan.fetch('cf_service_access') != 'manual'
          raise "Unsupported value #{plan.fetch('cf_service_access')} for cf_service_access. Choose from \"enable\", \"disable\", \"manual\", \"org-restricted\""
      %>
    <% end %>
  <% end %>
<% end %>
