#!/usr/bin/env bash

set -eu

[ -z "${DEBUG:-}" ] || set -x

BASE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
source "$BASE_DIR/config.sh"

export BOSH_ENVIRONMENT="https://$BOSH_DIRECTOR_IP_ADDRESS:25555"
export BOSH_CLIENT
export BOSH_CLIENT_SECRET
export BOSH_NON_INTERACTIVE=true
export BOSH_CA_CERT

main() {
  make_bosh_lite_accessible_via_dns
  create_director
  add_bosh_dns
  create_environment_alias
  deploy_cf
  target_cf_and_create_org_and_space
  generate_broker_deployment_vars
  upload_service_metrics_release
 }

get_latest_repo() {
  local repo_path=$1
  local repo_url=$2

  if [[ ! -d "${repo_path}" ]] ; then
     git clone "${repo_url}" "${repo_path}"
   else
     git --work-tree="${repo_path}" --git-dir="${repo_path}/.git" pull origin master -r || {
       echo "failed to update ${repo_path}"
       exit 1
     }
  fi
}

create_director() {
  mkdir -p "$DIRECTOR_DIR"

  get_latest_repo \
    "${BOSH_LITE_DIR}" \
    https://github.com/cloudfoundry/bosh-deployment

  local boost_vm_resources
  boost_vm_resources=$(mktemp)

  cat > "$boost_vm_resources" << EOF
- type: replace
  path: /resource_pools/name=vms/cloud_properties?
  value:
    cpus: 4
    memory: 8192
    ephemeral_disk: 32_768
EOF

  bosh create-env "$BOSH_LITE_DIR/bosh.yml" \
    --state "$DIRECTOR_DIR/state.json" \
    -o "$BOSH_LITE_DIR/virtualbox/cpi.yml" \
    -o "$boost_vm_resources" \
    -o "$BOSH_LITE_DIR/virtualbox/outbound-network.yml" \
    -o "$BOSH_LITE_DIR/bosh-lite.yml" \
    -o "$BOSH_LITE_DIR/bosh-lite-runc.yml" \
    -o "$BOSH_LITE_DIR/jumpbox-user.yml" \
    -o "$BOSH_LITE_DIR/uaa.yml" \
    -o "$BOSH_LITE_DIR/credhub.yml" \
    --vars-store "$BOSH_VARS_STORE" \
    -v director_name="$BOSH_DIRECTOR_NAME" \
    -v internal_ip="$BOSH_DIRECTOR_IP_ADDRESS" \
    -v internal_gw="$BOSH_DIRECTOR_GATEWAY" \
    -v internal_cidr="$BOSH_DIRECTOR_CIDR" \
    -v admin_password="$BOSH_CLIENT_SECRET" \
    -v outbound_network_name="$NETWORK_NAME"

  BOSH_CA_CERT="$(bosh int "$BOSH_VARS_STORE" --path /director_ssl/ca)"
}

add_bosh_dns() {
  bosh update-runtime-config \
    "$BOSH_LITE_DIR"/runtime-configs/dns.yml --name dns
}

deploy_cf() {
  BOSH_CA_CERT="$(bosh int "$BOSH_VARS_STORE" --path /director_ssl/ca)"

  get_latest_repo \
    "${CF_DIR}" \
    git@github.com:cloudfoundry/cf-deployment.git

  stemcell_os="$(bosh int --path /stemcells/alias=default/os "$CF_DIR/cf-deployment.yml")"
  bosh_lite_stemcell=bosh-warden-boshlite-${stemcell_os}-go_agent
  bosh_lite_stemcell_version="$(bosh int --path /stemcells/alias=default/version "$CF_DIR/cf-deployment.yml")"
  bosh_lite_stemcell_url="https://bosh.io/d/stemcells/$bosh_lite_stemcell?v=$bosh_lite_stemcell_version"
  bosh -n upload-stemcell "$bosh_lite_stemcell_url"

  bosh -n update-cloud-config "$CF_DIR/iaas-support/bosh-lite/cloud-config.yml" \
    --ops-file cloud-config/bosh-lite-legacy-vms.yml \
    --ops-file cloud-config/public-ip-vm-extension.yml

  bosh -n -d cf deploy "$CF_DIR/cf-deployment.yml" \
    -o "$CF_DIR/operations/bosh-lite.yml" \
    --ops-file "$CF_DIR/operations/use-compiled-releases.yml" \
    --vars-store "$CF_VARS_STORE" \
    -v cf_admin_password="$CF_ADMIN_PASSWORD" \
    -v system_domain="$SYSTEM_DOMAIN"

  bosh -d cf run-errand smoke-tests
}

target_cf_and_create_org_and_space(){
  cf api "https://api.${SYSTEM_DOMAIN}" --skip-ssl-validation
  cf auth "$CF_ADMIN_USERNAME" "$CF_ADMIN_PASSWORD"
  cf create-org "$CF_ORG"
  cf create-space "$CF_SPACE" -o "$CF_ORG"
}

generate_broker_deployment_vars(){
  "$BASE_DIR/helpers/make-broker-deployment-vars.sh"
}

make_bosh_lite_accessible_via_dns() {
  "$BASE_DIR/helpers/set-routes.sh" "$BOSH_DIRECTOR_IP_ADDRESS"
}

create_environment_alias() {
  BOSH_CA_CERT="$(bosh int "$BOSH_VARS_STORE" --path /director_ssl/ca)"
  bosh alias-env "$BOSH_ENV_ALIAS" \
    --environment "$BOSH_ENVIRONMENT" \
    --ca-cert "$BOSH_CA_CERT"

  bosh -e "$BOSH_ENV_ALIAS" log-in \
    --client "$BOSH_CLIENT" \
    --client-secret "$BOSH_CLIENT_SECRET" \

  bosh environments
}

upload_service_metrics_release() {
  bosh -e "$BOSH_ENV_ALIAS" upload-release --sha1 8bb1fc117f15a9744dad12f1859e02fbeb56676b https://bosh.io/d/github.com/cloudfoundry/service-metrics-release?v=1.6.0
}

main "$@"
